
    
  



@{ViewBag.Title = "Upload documents";}
@{ViewBag.Keywords = "TfL";}
@{ViewBag.Url = "/modes/driving/fleet-autopay-apply-supporting-documentation-29117";}
@{ViewBag.Language = "en";}
        <!-- empty placeholder -->
 
        
        
<div class="r">
    <div class="breadcrumb-container" role="navigation">
        <span id="breadcrumb-label" class="visually-hidden">You are here:</span>
        <ol class="breadcrumbs clearfix" aria-labelledby="breadcrumb-label">
            <li class="home">
                <a href="/">
                    <span class="hide-text">Home</span>
                </a>
            </li>
            
                 <li><a href="/modes/driving/index">Driving</a></li>
                
            
                 <li><a href="/modes/driving/auto-pay">Auto Pay</a></li>
                
            
            
            
                <li><span class="last-breadcrumb">Upload documents</span></li>
            
        
 
        
 
        
 
        
 
        </ol>
    </div>
</div>
     
 
<div class="r">
  <div class="headline-container plain">
    <h1>Upload documents</h1>

  </div>
</div>
<div class="main-and-aside r">
  
  <div class="main content-container" role="main">
    
    
      
      
           
      

        @{
            dynamic failureContent = new ContentModel();

            failureContent.ErrorMessageTitle = "Your Fleet Auto Pay application has failed";
            failureContent.ErrorMessageInformation = "Please review your information and try again";

            Html.RenderAction(
                RucDictionary.AutoPayApply.FailureFleetActionName,
                "AutoPayApplyFleet",
                new
                {
                    area = "Ruc",
                    content = failureContent
                }
            );
        }
      
 <div>

<p>We need to see 1 of the following to complete your application:</p>

<ul>
	<li><strong>Registered companies </strong>- headed paper with your company number OR a copy of your company's Certificate of Incorporation (issued by Companies House or the equivalent within an EEA state)</li>
	<li><strong>Public organisations </strong>- headed paper including organisation name (further proof may be needed for verification)</li>
	<li><strong>Charities </strong>- headed paper including organisation name and registered charity number</li>
</ul>
</div>
 

      @{
            dynamic content = new ContentModel();
            content.BackButtonText = "Back";
            content.ContinueButtonText = "Continue";
            content.ConfirmEvidencePost = "";
            content.UploadDocumentationHeading = "Upload supporting documents";
            content.AcceptTermsAndConditionsText = "<p>I agree to the <a href='/corporate/terms-and-conditions/pay-to-drive-in-london' target='_blank'>Fleet Auto Pay terms and conditions</a></p>";
            content.AcceptTermsAndConditionsRequireTrue = "Accept the terms and conditions to continue";
            content.SupportingDocumentationNotUploadedErrorText = "Upload supporting documents to continue";
            
            Html.RenderAction(
                RucDictionary.AutoPayApply.SupportingDocsActionName,
                "AutoPayApplyFleet",
                new
                {
                    area = "Ruc",
                    backUrl = "/modes/driving/fleet-autopay-apply-apply-anon-30199",
                    selectPaymentUrl = "/modes/driving/fleet-autopay-apply-select-payment-29107",
                    manageAutoPayFleetUrl = "/modes/driving/fleet-autopay-manage-autopay-fleet-28966",
                    content = content
                }
            );
        }
        @this.ScriptBlock(
        @<script>
             queue.push("@Html.ScriptPath("plugins/file-uploaders.min.js")", null);
             queue.push("@Html.ScriptPath("specific/autopay.min.js")", null);
             queue.push(
                 function () {
                     tfl.forms.attachUnload("You have not completed your form. If you leave your data will be lost.");
                 }
                 );
        </script>
        )
      
 
      
        
          
        
      
    
  </div>
  <div class="aside" role="complementary">

    

        @{
            dynamic userInfoBoxContent = new ContentModel();
            Html.RenderAction("UserInfoBox", "Account", new { Area = "Ruc", content = userInfoBoxContent, logOutUrl = "/modes/driving/congestion-charge" });
        }
        
      

 
    
    
    <div></div>
    
    <div data-set="sidenav-container" class="small-medium"></div>
  </div>
</div>

 
        
        
        
            @{ViewBag.Description = "";}
        
            
        


 